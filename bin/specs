#!/usr/bin/env node

const fs = require('fs')
const path = require('path')
const amf = require('amf-client-js')

const { postProcess } = require("./lib/post-processing")
const { RequestSpecGenerator } = require("./lib/request-spec-generator")

const ramlPath = process.argv[2]
const specPath = process.argv[3]

async function main () {
  const ramlDir = path.resolve(ramlPath)
  const specDir = path.resolve(specPath)
  const raml10 = amf.RAMLConfiguration.RAML10().baseUnitClient()

  const parseResult = await raml10.parse(`file://${ramlDir}`)
  const resolved = raml10.transform(parseResult.baseUnit, amf.PipelineId.Cache)

  postProcess(resolved.baseUnit)

  var specGenerator = new RequestSpecGenerator(resolved.baseUnit)
  specGenerator.generate()

  const specFileDir = `${specDir}/requests/state/api/v1/latest`
  const specSchemaDir = `${specDir}/support/schemas/state/api/v1/latest`

  fs.mkdirSync(specFileDir, { recursive: true })
  fs.mkdirSync(specSchemaDir, { recursive: true })

  fs.writeFileSync(`${specFileDir}/api_spec.rb`, specGenerator.spec)

  Object.entries(specGenerator.schemas).forEach(([schemaId, schema]) => {
    fs.writeFileSync(`${specSchemaDir}/${schemaId}.json`, schema)
  })
}

main()
