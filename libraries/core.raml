#%RAML 1.0 Library

usage: |
  Defines core API types, forms, and resources.

uses:
  prelude: /libraries/prelude.raml

types:
  # Annotations

  Tag:
    type: object
    properties:
      x-displayName: string

  TagGroup:
    type: object
    properties:
      name: string
      tags: string[]

  Logo:
    type: object
    properties:
      url: string
      backgroundColor?: string
      altText?: string
      href?: string

  # Constants

  METRIC_AXIS_TYPE:
    (prelude.common):
    type: string
    enum: [time, measure]
  METRIC_PLOT_TYPE:
    (prelude.common):
    type: string
    enum: [line, bar]
  METRIC_INTERPOLATION:
    (prelude.common):
    type: string
    enum: [linear, step, basis, bundle, cardinal]
  METRIC_AGGREGATION:
    (prelude.common):
    type: string
    enum: [sum, average, first, last, max, min]

  ISSUE_PRIORITY:
    (prelude.common):
    type: integer
    enum: [-1, 0, 1]
  ISSUE_SPECIALIZATION:
    (prelude.common):
    type: string
    enum: [informational, maintenance, general]
  ISSUE_LABEL:
    (prelude.common):
    type: string
    enum: [assessed, identified, informational, investigating, maintenance]

  UPDATE_LABEL:
    (prelude.common):
    type: string
    enum: [identified, investigating, monitoring, resolved, addendum, cancelled]

  ISSUE_TEMPLATE_KIND:
    (prelude.common):
    type: string
    enum: [issue, update]
  ISSUE_TEMPLATE_LABEL:
    (prelude.common):
    type: string
    enum: [maintenance, assessed, identified, investigating, monitoring, resolved, addendum, informational]

  PINGDOM_CHECK_TYPE:
    (prelude.common):
    type: string
    enum: [transactional, check]

  CLOUDWATCH_REGION:
    (prelude.common):
    type: string
    enum: [ap-northeast-1, ap-southeast-1, ap-southeast-2, eu-central-1, eu-west-1, sa-east-1, us-east-1, us-west-1, us-west-2]

  NEWRELIC_API_REGION:
    (prelude.common):
    type: string
    enum: [us, eu]

  NATIVE_REGION:
    (prelude.common):
    type: string
    enum: [wa-us-1, tx-us-1, nj-us-1, lon-gb-1, syd-au-1, fra-de-1, par-fr-1, ams-nl-1, sin-sg-1, hel-fi-1]
  NATIVE_IP_VERSION:
    (prelude.common):
    type: string
    enum: [inet, inet6]
  NATIVE_STRING_CONTAINMENT_MODE:
    (prelude.common):
    type: string
    enum: [exact, regex]
  NATIVE_DNS_RESPONSE_CONTAINMENT:
    (prelude.common):
    type: string
    enum: [any, all]
  NATIVE_DNS_RECORD_TYPE:
    (prelude.common):
    type: string
    enum: [A, AAAA, CNAME, MX, NS, PTR, SOA, SRV, TXT]

  NOTIFICATION_EVENT:
    (prelude.common):
    type: string
    enum: [restored, degraded, issue_upcoming, issue_retrospectively_created, -issue_retrospectively_created, informational_issue_created, -informational_issue_created, scheduled_issue_created, -scheduled_issue_created, issue_created, issue_reopened, -issue_reopened, issue_resolved, -issue_resolved, issue_addended, -issue_addended, issue_updated, issue_cancelled, issue_started, issue_ended, notifier_tested]
  NOTIFICATION_LISTEN_LEVEL:
    (prelude.common):
    type: string
    enum: [all, normal, custom]

  SMTP_AUTHENTICATION_TYPE:
    (prelude.common):
    type: string
    enum: [plain, login, cram-md5]

  SNS_SENDER_ID:
    (prelude.common):
    type: string
    pattern: ^\d*[a-zA-Z][a-zA-Z\d\s]*$
  SNS_PHONE_NUMBER:
    (prelude.common):
    type: string
    pattern: ^\+?[1-9]\d{1,14}$

  WEBHOOK_VERB:
    (prelude.common):
    type: string
    enum: [post, put]

  COUNTRY_CODE_A2:
    (prelude.common):
    type: string
    pattern: ^[A-Za-z]{2}$

  TIMELINE_SOURCE_GLOBAL:
    (prelude.common):
    type: string
    enum: [global]
  TIMELINE_SOURCE:
    (prelude.common):
    type: TIMELINE_SOURCE_GLOBAL | ObjectId | ObjectId[]
  TIMELINE_OUTAGE_DURATIONS:
    (prelude.common):
    type: object
    properties:
      /^[a-fA-F0-9]{24}$/: nonnegative-integer

  # Primitives

  maybe-string:
    (prelude.common):
    type: nil | string
  maybe-boolean:
    (prelude.common):
    type: nil | boolean
  nonnegative-number:
    (prelude.common):
    type: number
    minimum: 0
  nonnegative-integer:
    (prelude.common):
    type: integer
    minimum: 0
  port:
    (prelude.common):
    type: integer
    minimum: 1
    maximum: 65535
  percentage:
    (prelude.common):
    type: number
    minimum: 0
    maximum: 1
  integer-state:
    (prelude.common):
    description: |
      An integer denoting operational state (1 => operational, 0 => degraded, -1 => outage).
    displayName: State
    type: integer
    enum: [-1, 0, 1]
  namespaced-slug:
    (prelude.common):
    description: |
      An alphanumeric (plus underscore) string, separated by zero or more dots,
      denoting namespaces.
    displayName: Slug
    type: string
    pattern: ([a-z][a-z0-9_]*)(\.[a-z][a-z0-9_]*)*
  i18n:
    (prelude.common):
    type: object
    properties:
      # original: string
      //: string
  polymorphic-i18n:
    (prelude.common):
    type: object
    properties:
      default: i18n
      //: i18n
  i18n-string:
    (prelude.common):
    description: |
      A localized string. The particular translation used on this string depends
      on the given `Accept-Language` header. Given an `Accept-Language` header
      value of `*`, this value will be the full object of translations. If a
      translation does not exist for the requested language, the Status Page
      *Default Language* is used as a fallback.
    displayName: i18n-string
    type: string | i18n
  maybe-i18n-string:
    (prelude.common):
    type: i18n-string | nil
  timestamp:
    (prelude.common):
    type: nonnegative-integer
  maybe-timestamp:
    (prelude.common):
    type: nil | timestamp

  NotificationEvents:
    (prelude.common):
    type: NOTIFICATION_EVENT[]
    uniqueItems: true

  WatchdogIssueTemplates:
    (prelude.common):
    type: object
    additionalProperties: false
    properties:
      outage: nil | ObjectId
      degraded: nil | ObjectId
      operational: nil | ObjectId

  # Mixins

  Timestamps/Updated:
    type: object
    additionalProperties: false
    properties:
      updated_at:
        type: timestamp
  Timestamps/Created:
    type: object
    additionalProperties: false
    properties:
      created_at:
        type: timestamp
  Timestamps:
    type: [Timestamps/Updated, Timestamps/Created]
    additionalProperties: false
  Describable:
    type: object
    additionalProperties: false
    properties:
      description:
        type: maybe-i18n-string
      description_html:
        type: i18n-string
  IssueContentable:
    type: object
    additionalProperties: false
    properties:
      label: maybe-i18n-string
      body: maybe-i18n-string
      body_html: i18n-string
      state_override: nil | integer-state
  NotificationPreferential:
    type: object
    additionalProperties: false
    properties:
      listens_to: NotificationEvents
      listens_to_level: NOTIFICATION_LISTEN_LEVEL
      notification_exclusions: ObjectId[]
  NotificationPreferential/Form:
    type: Form
    properties:
      listens_to?: NotificationEvents
      listens_to_level?: NOTIFICATION_LISTEN_LEVEL
      notification_exclusions?: ObjectId[]

  # Objects

  TypedObject: prelude.TypedObject
  Form: !include /types/form.raml
  Error: !include /types/error.raml

  HAL/Link: prelude.HAL/Link
  HAL/Links: prelude.HAL/Links
  HAL/Linkable: prelude.HAL/Linkable
  HAL/Embedded: prelude.HAL/Embedded
  HAL: prelude.HAL

  UUID:
    (prelude.common):
    displayName: UUID
    type: string
    pattern: ^[0-9a-fA-F]{8}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{4}-[0-9a-fA-F]{12}$

  ObjectId: !include /types/bson/object_id.raml

  PagedArray: !include /types/state/paged_array.raml

  Channel: !include /types/state/channel.raml
  Service: !include /types/state/service.raml

resourceTypes:
  read-collection: !include /resourceTypes/read-collection.raml
  collection: !include /resourceTypes/collection.raml
  collection-preview: !include /resourceTypes/collection-preview.raml
  collection-item: !include /resourceTypes/collection-item.raml
  read-collection-item: !include /resourceTypes/read-collection-item.raml
  simple-action: !include /resourceTypes/simple-action.raml
  action: !include /resourceTypes/action.raml

traits:
  bad-request-failable: !include /traits/bad-request-failable.raml
  not-authorized-failable: !include /traits/not-authorized-failable.raml
  not-found-failable: !include /traits/not-found-failable.raml
  validation-failable: !include /traits/validation-failable.raml

annotationTypes:
  expandable:
    description: Flag denoting that this field can be expanded in responses via `expand[]` query parameter.
    allowedTargets: TypeDeclaration
    type: nil
  logo:
    description: A logo image associated with this API.
    allowedTargets: API
    type: Logo
  tags:
    description: Either a definition of tags or application of them on resource types.
    allowedTargets: [API, Resource]
    type: string[] | Tag[]
  tagGroups:
    description: A grouping of tags.
    allowedTargets: API
    type: TagGroup[]
  fieldDescriptions:
    description: |
      A field->string mapping of descriptions for a set of fields. Alternatively,
      a type->(field->string) mapping (with required `default` key merged into
      all types, and used as base when no other type matches). Override by
      setting the `description` facet on a specific field. Typically set this
      by `!include`ing a central JSON/YAML mapping stored in `/documentation`.
    allowedTargets: TypeDeclaration
    type: i18n | polymorphic-i18n
  overrideFieldDescription:
    description: |
      Flag allowing any description set in a type declaration to override any
      that would be set from given `fieldDescriptions`.
    allowedTargets: TypeDeclaration
    type: nil
